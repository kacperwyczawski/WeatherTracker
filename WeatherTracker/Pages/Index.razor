@page "/"
@using WeatherTracker.Services
@using WeatherTracker.Models
@inject ICityService CityService
@inject NavigationManager NavigationManager

<PageTitle>Weather Tracker | Home</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-8">

    <MudGrid>
        @foreach (var city in _cities)
        {
            <MudItem lg="12" xl="6">
                <CityCard IconId="@city.LatestWeatherData?.IconId" CityName="@city.Name"
                          Temperature="@city.LatestWeatherData?.Temperature" Humidity="@city.LatestWeatherData?.Humidity"
                          OnDetails="@(() => NavigationManager.NavigateTo("/Details/" + city.Id))"
                          OnDelete="@(async () => { await CityService.DeleteCityAsync(city.Id); await FetchDataAsync(); })"/>
            </MudItem>
        }
    </MudGrid>


    @if (_cities.Count() < 10)
    {
        <MudPaper Class="d-flex my-8 pa-4 justify-center">
            <MudIconButton Icon="@Icons.Filled.Add" Size="Size.Large" Href="/AddCity"/>
        </MudPaper>
    }

</MudContainer>

@code
{
    IEnumerable<City> _cities;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await FetchDataAsync();
    }

    async Task FetchDataAsync() => _cities = await CityService.GetAllCitiesAsync();
}